name: CI

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    container: python:3.10-bullseye

    #services:
    #  postgres:
    #    image: postgres
    #    env:
    #      POSTGRES_USER: pypeusr
    #      POSTGRES_PASSWORD: pypepass
    #      POSTGRES_DB: pype
    #    ports:
    #      - "5432:5432"
    #    options: >-
    #      --health-cmd pg_isready
    #      --health-interval 10s
    #      --health-timeout 5s
    #      --health-retries 5

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Set up Python 3.10
        uses: actions/setup-python@v2.2.1
        with:
          python-version: 3.10.9

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Code Quality
        run: poetry run black . --check

      - name: Run setup
        run: poetry run python -m setup --with-schema

      #- name: Test with pytest
      #  run: poetry run pytest
